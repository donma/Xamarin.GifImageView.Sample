{"Name":"GifImageView","Id":2031,"Alias":"GifImageViewAndroid","Description":"# GifImageView Details\n\nXamarin.Android ImageView that handles Animated GIF images!\n\nSimply add some xml:\n\n```xml\n\u003ccom.felipecsl.gifimageview.library.GifImageView\n    android:id=\"@+id/gifImageView\"\n    android:layout_gravity=\"center\"\n    android:scaleType=\"fitCenter\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" /\u003e\n```\n\nDownload a byte array and start your animation:\n\n```csharp\n var bytes = await client.GetByteArrayAsync(\"http://dogoverflow.com/dRX5G8qK\");\ngifImageView.SetBytes(bytes);\ngifImageView.StartAnimation();\n```\n\nLet there be Gif Animations!\n","Version":"1.2.0","Summary":"Xamarin.Android ImageView that handles Animated GIF images!","QuickStart":"# Getting Started with GifImageView\n\nXamarin.Android ImageView that handles Animated GIF images!\n\nThis is a derivative of Felipe Lima\u0027s GifImageView: https://github.com/felipecsl/GifImageView/ under MIT\n\n### Usage\n\nInstall NuGet Package into Android project: https://www.nuget.org/packages/Refractored.GifImageView\n\n**In your Android XML:**\n\n```xml\n\u003ccom.felipecsl.gifimageview.library.GifImageView\n    android:id=\"@+id/gifImageView\"\n    android:layout_gravity=\"center\"\n    android:scaleType=\"fitCenter\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" /\u003e\n```\n\n**In your Activity class:**\n\nAdd using statement:\n```csharp\nusing Felipecsl.GifImageViewLibrary;\n```\nFind views and load animation:\n\n```csharp\nGifImageView gifImageView;     \n\nprotected override void OnCreate(Bundle savedInstanceState)\n{\n    base.OnCreate(savedInstanceState);\n\n    // Set our view from the \"main\" layout resource\n    SetContentView(Resource.Layout.Main);\n\n    gifImageView = FindViewById\u003cGifImageView\u003e(Resource.Id.gifImageView);\n    var buttonLoad = FindViewById\u003cButton\u003e(Resource.Id.loadImage);\n\n    buttonLoad.Click += async (sender, e) =\u003e \n        {\n            try\n            {\n                ActionBar.Title = \"Error downloading\";\n                using(var client = new HttpClient())\n                {\n                    var bytes = await client.GetByteArrayAsync(\"http://dogoverflow.com/dRX5G8qK\");\n                    gifImageView.SetBytes(bytes);\n                    gifImageView.StartAnimation();\n                }\n            }\n            catch(Exception ex)\n            {\n                ActionBar.Title = \"Error downloading\";\n            }\n        };\n}\n\nprotected override void OnStop()\n{\n    base.OnStop();\n    gifImageView.StopAnimation();\n}\n\nprotected override void OnStart()\n{\n    base.OnStart();\n    gifImageView.StartAnimation();\n}\n```\n\nIf you need to post-process the GIF frames, you can do that via ``ISetOnFrameAvailableListener``.\n\n\n```csharp\npublic class MainActivity : Activity, GifImageView.IOnFrameAvailableListener\n{\n    protected override async void OnCreate(Bundle savedInstanceState)\n    {\n        base.OnCreate(savedInstanceState);\n\n        // Set our view from the \"main\" layout resource\n        SetContentView(Resource.Layout.Main);\n\n        gifImageView = FindViewById\u003cGifImageView\u003e(Resource.Id.gifImageView);\n        gifImageView.OnFrameAvailableListener = this;\n    }   \n\n    public Bitmap OnFrameAvailable(Bitmap bitmap)\n    {\n        if (shouldBlur)\n            return blur.BlurImage(bitmap);\n\n        return bitmap;\n    }\n}   \n```\n\nYou can see an example of that in the sample application.","Hash":"a9e8bdff6c3bd56c37f6e60f2814c1e0","TargetPlatforms":["android"],"TrialHash":null}